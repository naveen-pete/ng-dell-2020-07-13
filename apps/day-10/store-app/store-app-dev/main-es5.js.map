{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/sign-up/sign-up.component.ts","webpack:///src/app/auth/sign-up/sign-up.component.html","webpack:///src/app/common/logger.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/models/product.model.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/notification/notification.component.ts","webpack:///src/app/notification/notification.component.html","webpack:///src/app/products/product-detail/product-detail.component.ts","webpack:///src/app/products/product-detail/product-detail.component.html","webpack:///src/app/products/product-form-create/product-form-create.component.ts","webpack:///src/app/products/product-form-create/product-form-create.component.html","webpack:///src/app/products/product-form-update/product-form-update.component.ts","webpack:///src/app/products/product-form-update/product-form-update.component.html","webpack:///src/app/products/product-form/product-form.component.ts","webpack:///src/app/products/product-form/product-form.component.html","webpack:///src/app/products/product-list/product-list.component.ts","webpack:///src/app/products/product-list/product-list.component.html","webpack:///src/app/products/products.component.ts","webpack:///src/app/products/products.component.html","webpack:///src/app/products/products.service.ts","webpack:///src/app/spinner/spinner.component.ts","webpack:///src/app/spinner/spinner.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","canActivate","children","data","header","message","type","AppRoutingModule","forRoot","imports","AppComponent","authService","autoLogin","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","router","next","state","user","pipe","navigate","providedIn","AuthInterceptor","request","handle","modifiedRequest","clone","params","set","token","headers","TOKEN_EXPIRATION_TIME_IN_SEC","AuthService","http","authData","post","authApiUrl","firebaseApiKey","handleError","authResponseData","handleAuthToken","userData","JSON","parse","localStorage","getItem","tokenExpiryDate","Date","_tokenExpiryDate","email","_token","expiryDuration","getTime","now","autoLogout","console","log","autoLogoutTimer","window","setTimeout","logout","removeItem","clearTimeout","localId","idToken","expiresIn","expiresInMS","parseInt","authenticatedUser","setItem","stringify","errorResponse","error","LoginComponent","isLoading","form","required","password","valid","errorMessage","value","returnSecureToken","login","subscribe","get","onLogin","SignUpComponent","name","minLength","signUp","onSignUp","LoggerService","HeaderComponent","selectedUrl","isAuthenticated","subRouteEvents","events","url","startsWith","subUser","item","unsubscribe","HomeComponent","ProductModel","User","currentTime","expiryTime","NotificationComponent","route","ProductDetailComponent","loggerService","productsService","product","paramMap","getProduct","confirm","deleteProduct","ProductFormCreateComponent","addProduct","ProductFormUpdateComponent","updateProduct","ProductFormComponent","mode","saveProduct","description","price","isAvailable","emit","onSave","ProductListComponent","subProductsChanged","productsChanged","products","getProducts","onAdd","ProductsComponent","ProductsService","apiUrl","dataApiUrl","responseData","Object","forEach","key","push","newProduct","patch","updatedProduct","map","p","filter","SpinnerComponent","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oC,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,SAAS,GAAW,CACxB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADwB,EAExB;AACED,UAAI,EAAE,UADR;AACoBC,eAAS,EAAE,8EAD/B;AACkDC,iBAAW,EAAE,CAAC,2DAAD,CAD/D;AAC4EC,cAAQ,EAAE,CAClF;AACEH,YAAI,EAAE,EADR;AACYC,iBAAS,EAAE,0FADvB;AAC8CG,YAAI,EAAE;AAChDC,gBAAM,EAAE,OADwC;AAEhDC,iBAAO,EAAE,2FAFuC;AAGhDC,cAAI,EAAE;AAH0C;AADpD,OADkF,EAQlF;AAAEP,YAAI,EAAE,KAAR;AAAeC,iBAAS,EAAE;AAA1B,OARkF,EASlF;AAAED,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE;AAA/B,OATkF,EAUlF;AAAED,YAAI,EAAE,KAAR;AAAeC,iBAAS,EAAE;AAA1B,OAVkF;AADtF,KAFwB,EAgBxB;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAhBwB,EAiBxB;AAAED,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE;AAA7B,KAjBwB,EAkBxB;AACED,UAAI,EAAE,IADR;AACcC,eAAS,EAAE,0FADzB;AACgDG,UAAI,EAAE;AAClDC,cAAM,EAAE,QAD0C;AAElDC,eAAO,EAAE,uBAFyC;AAGlDC,YAAI,EAAE;AAH4C;AADtD,KAlBwB,CAA1B;;QAmCaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAPlB,CACP,6DAAaC,OAAb,CAAqBV,SAArB,CADO,CAC0B;AAD1B,OAOkB,EAHzB,4DAGyB;;;;0HAAhBS,gB,EAAgB;AAAA;AAAA,kBAHzB,4DAGyB;AAAA,O;AAHb,K;;;;;sEAGHA,gB,EAAgB;cAR5B,sDAQ4B;eARnB;AACRE,iBAAO,EAAE,CACP,6DAAaD,OAAb,CAAqBV,SAArB,CADO,CAC0B;AAD1B,WADD;AAIRF,iBAAO,EAAE,CACP,4DADO;AAJD,S;AAQmB,Q;;;;;;;;;;;;;;;;;;ACzD7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASac,Y;AAEX,4BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;mCAEtC;AACT,eAAKA,WAAL,CAAiBC,SAAjB;AACD;;;;;;;uBANUF,Y,EAAY,+H;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACTzB;;AAEA;;AACE;;AACF;;;;;;;;;sEDKaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTG,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AETzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAwDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAPT,CACT,oEADS,EAET,2EAFS,EAGT;AAAEC,eAAO,EAAE,sEAAX;AAA8BC,gBAAQ,EAAE,uEAAxC;AAAyDC,aAAK,EAAE;AAAhE,OAHS,C;AAIV,gBAXQ,CACP,uEADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,qEAJO,EAKP,qEALO,CAWR;;;;0HAGUH,S,EAAS;AAAA,uBA5BlB,2DA4BkB,EA3BlB,wEA2BkB,EA1BlB,8EA0BkB,EAzBlB,wGAyBkB,EAxBlB,kGAwBkB,EAvBlB,mEAuBkB,EAtBlB,2FAsBkB,EArBlB,mGAqBkB,EApBlB,gFAoBkB,EAnBlB,2EAmBkB,EAlBlB,uHAkBkB,EAjBlB,uHAiBkB,EAhBlB,4EAgBkB;AAhBF,kBAGhB,uEAHgB,EAIhB,0DAJgB,EAKhB,kEALgB,EAMhB,qEANgB,EAOhB,qEAPgB;AAgBE,O;AATF,K;;;;;sEASPA,S,EAAS;cA9BrB,sDA8BqB;eA9BZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,8EAHY,EAIZ,wGAJY,EAKZ,kGALY,EAMZ,mEANY,EAOZ,2FAPY,EAQZ,mGARY,EASZ,gFATY,EAUZ,2EAVY,EAWZ,uHAXY,EAYZ,uHAZY,EAaZ,4EAbY,CADN;AAgBRX,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,qEAJO,EAKP,qEALO,CAhBD;AAuBRY,mBAAS,EAAE,CACT,oEADS,EAET,2EAFS,EAGT;AAAEJ,mBAAO,EAAE,sEAAX;AAA8BC,oBAAQ,EAAE,uEAAxC;AAAyDC,iBAAK,EAAE;AAAhE,WAHS,CAvBH;AA4BRG,mBAAS,EAAE,CAAC,2DAAD;AA5BH,S;AA8BY,Q;;;;;;;;;;;;;;;;;;ACxDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,S;AAEX,yBACUZ,WADV,EAEUa,MAFV,EAEwB;AAAA;;AADd,aAAAb,WAAA,GAAAA,WAAA;AACA,aAAAa,MAAA,GAAAA,MAAA;AACL;;;;oCAGHC,I,EACAC,K,EAA0B;AAAA;;AAE1B,iBAAO,KAAKf,WAAL,CAAiBgB,IAAjB,CAAsBC,IAAtB,CACL,4DAAK,CAAL,CADK,EAEL,2DAAI,UAAAD,IAAI,EAAI;AACV,gBAAIA,IAAJ,EAAU;AACR,qBAAO,IAAP;AACD;;AAED,iBAAI,CAACH,MAAL,CAAYK,QAAZ,CAAqB,CAAC,QAAD,CAArB;;AACA,mBAAO,KAAP;AACD,WAPD,CAFK,CAAP;AAYD;;;;;;;uBAvBUN,S,EAAS,iH,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVO,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACVtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeaC,e;AAEX,+BAAoBpB,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;kCAEvCqB,O,EAA+BP,I,EAAiB;AACxD,iBAAO,KAAKd,WAAL,CAAiBgB,IAAjB,CAAsBC,IAAtB,CACL,4DAAK,CAAL,CADK,EAEL,iEAAU,UAAAD,IAAI,EAAI;AAChB,gBAAI,CAACA,IAAL,EAAW;AACT,qBAAOF,IAAI,CAACQ,MAAL,CAAYD,OAAZ,CAAP;AACD;;AAED,gBAAME,eAAe,GAAGF,OAAO,CAACG,KAAR,CAAc;AACpCC,oBAAM,EAAE,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqB,MAArB,EAA6BV,IAAI,CAACW,KAAlC,CAD4B;AAEpCC,qBAAO,EAAE,IAAI,gEAAJ,GAAkBF,GAAlB,CAAsB,QAAtB,EAAgC,mBAAhC;AAF2B,aAAd,CAAxB;AAIA,mBAAOZ,IAAI,CAACQ,MAAL,CAAYC,eAAZ,CAAP;AACD,WAVD,CAFK,CAAP;AAcD;;;;;;;uBAnBUH,e,EAAe,iH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;;;sEAAfA,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;ACf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,QAAMS,4BAA4B,GAAG,GAArC,C,CAA2C;;QAK9BC,W;AAIX,2BACUC,IADV,EAEUlB,MAFV,EAEwB;AAAA;;AADd,aAAAkB,IAAA,GAAAA,IAAA;AACA,aAAAlB,MAAA,GAAAA,MAAA;AALV,aAAAG,IAAA,GAA8B,IAAI,oDAAJ,CAAoB,IAApB,CAA9B;AAMK;;;;+BAEEgB,Q,EAAoB;AAAA;;AACzB,iBAAO,KAAKD,IAAL,CAAUE,IAAV,WAAoC,sEAAYC,UAAhD,yBAAyE,sEAAYC,cAArF,GAAuGH,QAAvG,EACJf,IADI,CAEH,kEAAW,KAAKmB,WAAhB,CAFG,EAGH,2DAAI,UAACC,gBAAD,EAAwC;AAC1C,kBAAI,CAACC,eAAL,CAAqBD,gBAArB;AACD,WAFD,CAHG,CAAP;AAOD;;;8BAEKL,Q,EAAoB;AAAA;;AACxB,iBAAO,KAAKD,IAAL,CAAUE,IAAV,WAAoC,sEAAYC,UAAhD,qCAAqF,sEAAYC,cAAjG,GAAmHH,QAAnH,EACJf,IADI,CAEH,kEAAW,KAAKmB,WAAhB,CAFG,EAGH,2DAAI,UAACC,gBAAD,EAAwC;AAC1C,kBAAI,CAACC,eAAL,CAAqBD,gBAArB;AACD,WAFD,CAHG,CAAP;AAOD;;;oCAEW;AACV,cAAME,QAAQ,GAKVC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CALJ;;AAOA,cAAI,CAACJ,QAAL,EAAe;AACb;AACD;;AAED,cAAMK,eAAe,GAAG,IAAIC,IAAJ,CAASN,QAAQ,CAACO,gBAAlB,CAAxB;AACA,cAAM9B,IAAI,GAAG,IAAI,uDAAJ,CACXuB,QAAQ,CAACrD,EADE,EAEXqD,QAAQ,CAACQ,KAFE,EAGXR,QAAQ,CAACS,MAHE,EAIXJ,eAJW,CAAb;;AAMA,cAAI5B,IAAI,CAACW,KAAT,EAAgB;AACd,iBAAKX,IAAL,CAAUF,IAAV,CAAeE,IAAf,EADc,CAGd;;AACA,gBAAMiC,cAAc,GAAGL,eAAe,CAACM,OAAhB,KAA4BL,IAAI,CAACM,GAAL,EAAnD;AACA,iBAAKC,UAAL,CAAgBH,cAAhB;AACD;AACF;;;mCAEkBA,c,EAAwB;AAAA;;AACzCI,iBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,cAA/B;AACA,eAAKM,eAAL,GAAuBC,MAAM,CAACC,UAAP,CACrB,YAAM;AACJ,kBAAI,CAACC,MAAL;AACD,WAHoB,EAIrBT,cAJqB,CAAvB;AAMD;;;iCAEQ;AACP,eAAKjC,IAAL,CAAUF,IAAV,CAAe,IAAf;AACA4B,sBAAY,CAACiB,UAAb,CAAwB,UAAxB;;AAEA,cAAI,KAAKJ,eAAT,EAA0B;AACxBC,kBAAM,CAACI,YAAP,CAAoB,KAAKL,eAAzB;AACA,iBAAKA,eAAL,GAAuB,IAAvB;AACD;;AAED,eAAK1C,MAAL,CAAYK,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;wCAEuBmB,gB,EAAoC;AAAA,cAClDwB,OADkD,GACXxB,gBADW,CAClDwB,OADkD;AAAA,cACzCd,KADyC,GACXV,gBADW,CACzCU,KADyC;AAAA,cAClCe,OADkC,GACXzB,gBADW,CAClCyB,OADkC;AAAA,cACzBC,SADyB,GACX1B,gBADW,CACzB0B,SADyB;AAG1D,cAAMC,WAAW,GACf,CAACD,SAAS,GAAGE,QAAQ,CAACF,SAAD,CAAX,GAAyBlC,4BAAnC,IAAmE,IADrE;AAEA,cAAMe,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACM,GAAL,KAAaa,WAAtB,CAAxB;AAEA,cAAME,iBAAiB,GAAG,IAAI,uDAAJ,CAASL,OAAT,EAAkBd,KAAlB,EAAyBe,OAAzB,EAAkClB,eAAlC,CAA1B;AACAF,sBAAY,CAACyB,OAAb,CAAqB,UAArB,EAAiC3B,IAAI,CAAC4B,SAAL,CAAeF,iBAAf,CAAjC,EAR0D,CAU1D;;AACA,eAAKlD,IAAL,CAAUF,IAAV,CAAeoD,iBAAf,EAX0D,CAa1D;;AACA,eAAKd,UAAL,CAAgBY,WAAhB;AACD,S,CAED;AACA;AACA;;;;oCACoBK,a,EAAgC;AAClD,cAAMC,KAAK,GAAG,IAAIzF,KAAJ,CAAU,4BAAV,CAAd;;AAEA,cAAI,CAACwF,aAAa,CAACC,KAAf,IAAwB,CAACD,aAAa,CAACC,KAAd,CAAoBA,KAAjD,EAAwD;AACtD,mBAAO,wDAAWA,KAAX,CAAP;AACD;;AAED,kBAAQD,aAAa,CAACC,KAAd,CAAoBA,KAApB,CAA0B5E,OAAlC;AACE,iBAAK,cAAL;AAAgC;AAC9B4E,mBAAK,CAAC5E,OAAN,GAAgB,yDAAhB;AACA;;AAEF,iBAAK,iBAAL;AAAgC;AAC9B4E,mBAAK,CAAC5E,OAAN,GAAgB,sDAAhB;AACA;;AAEF,iBAAK,kBAAL;AAAgC;AAC9B4E,mBAAK,CAAC5E,OAAN,GAAgB,+DAAhB;AACA;;AAEF,iBAAK,uBAAL;AAAgC;AAC9B4E,mBAAK,CAAC5E,OAAN,GAAgB,+BAAhB;AACA;;AAEF,iBAAK,eAAL;AACE4E,mBAAK,CAAC5E,OAAN,GAAgB,yDAAhB;AACA;AAnBJ;;AAsBA,iBAAO,wDAAW4E,KAAX,CAAP;AACD;;;;;;;uBAjIUxC,W,EAAW,uH,EAAA,8G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVX,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;AChBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBgB;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AANF;;AACE;;AAGA;;AAGF;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAWL;;AACE;;AACF;;;;;;AAHF;;AACE;;AAGF;;;;;;AAHO;;AAAA;;;;;;AAMT;;AACE;;AAA+E;;AAAK;;AACtF;;;;;;AADwB;;AAAA;;;;;;AAGxB;;;;;;AAMN;;AACE;;AACF;;;;;;AADE;;AAAA;;;;QDnCKoD,c;AAKX,8BACUvE,WADV,EAEUa,MAFV,EAEwB;AAAA;;AADd,aAAAb,WAAA,GAAAA,WAAA;AACA,aAAAa,MAAA,GAAAA,MAAA;AAJV,aAAA2D,SAAA,GAAY,KAAZ;AAKK;;;;mCAEG;AACN,eAAKC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxB1B,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW2B,QAAZ,EAAsB,0DAAW3B,KAAjC,CAApB,CADiB;AAExB4B,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,QAA/B;AAFc,WAAd,CAAZ;AAID;;;kCAES;AAAA;;AACR,cAAI,CAAC,KAAKD,IAAL,CAAUG,KAAf,EAAsB;AACpB;AACD;;AAED,eAAKJ,SAAL,GAAiB,IAAjB;AACA,eAAKK,YAAL,GAAoB,IAApB;AAEA,cAAM7C,QAAQ,GAAa;AACzBe,iBAAK,EAAE,KAAK0B,IAAL,CAAUK,KAAV,CAAgB/B,KADE;AAEzB4B,oBAAQ,EAAE,KAAKF,IAAL,CAAUK,KAAV,CAAgBH,QAFD;AAGzBI,6BAAiB,EAAE;AAHM,WAA3B;AAMA,eAAK/E,WAAL,CAAiBgF,KAAjB,CAAuBhD,QAAvB,EAAiCiD,SAAjC,CACE,YAAM;AACJ,kBAAI,CAACT,SAAL,GAAiB,KAAjB;;AACA,kBAAI,CAAC3D,MAAL,CAAYK,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD,WAJH,EAKE,UAACoD,KAAD,EAAkB;AAChBjB,mBAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBgB,KAAtB;AACA,kBAAI,CAACE,SAAL,GAAiB,KAAjB;AAEA,kBAAI,CAACK,YAAL,GAAoBP,KAAK,CAAC5E,OAA1B;AACA8D,kBAAM,CAACC,UAAP,CAAkB,YAAM;AACtB,oBAAI,CAACoB,YAAL,GAAoB,IAApB;AACD,aAFD,EAEG,IAFH;AAGD,WAdH;AAgBD;;;4BAEW;AACV,iBAAO,KAAKJ,IAAL,CAAUS,GAAV,CAAc,OAAd,CAAP;AACD;;;4BAEc;AACb,iBAAO,KAAKT,IAAL,CAAUS,GAAV,CAAc,UAAd,CAAP;AACD;;;;;;;uBAvDUX,c,EAAc,0H,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,k7B;AAAA;AAAA;ACZ3B;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAmC;;AAAK;;AAC1C;;AAEA;;AACE;;AAAyB;AAAA,mBAAY,IAAAY,OAAA,EAAZ;AAAqB,WAArB;;AACvB;;AACE;;AAAmB;;AAAK;;AACxB;;AAEA;;AAQF;;AAEA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAEA;;AAKF;;AAEA;;AAIA;;AAEF;;AACF;;AACF;;AAEA;;AAIF;;AACF;;AACF;;;;AA1CgB;;AAAA;;AAK+B;;AAAA;;AAcA;;AAAA;;AAOV;;AAAA;;AAIZ;;AAAA;;AAM+C;;AAAA;;;;;;;;;sEDlC3DZ,c,EAAc;cAL1B,uDAK0B;eALhB;AACTrE,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACec;;AACE;;AACF;;;;;;AAOA;;AACE;;AACF;;;;;;AAEE;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AATF;;AACE;;AAGA;;AAGA;;AAGF;;;;;;AATO;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAWL;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AANF;;AACE;;AAGA;;AAGF;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAMT;;AACE;;AAA+E;;AAAO;;AACxF;;;;;;AADwB;;AAAA;;;;;;AAGxB;;;;;;AAKN;;AACE;;AACF;;;;;;AADE;;AAAA;;;;QDpDKgF,e;AAKX,+BACUpF,WADV,EAEUa,MAFV,EAEwB;AAAA;;AADd,aAAAb,WAAA,GAAAA,WAAA;AACA,aAAAa,MAAA,GAAAA,MAAA;AAJV,aAAA2D,SAAA,GAAY,KAAZ;AAKK;;;;mCAEG;AACN,eAAKC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxBY,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWX,QAA/B,CADkB;AAExB3B,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW2B,QAAZ,EAAsB,0DAAW3B,KAAjC,CAApB,CAFiB;AAGxB4B,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWD,QAAZ,EAAsB,0DAAWY,SAAX,CAAqB,CAArB,CAAtB,CAApB;AAHc,WAAd,CAAZ;AAKD;;;mCAEU;AAAA;;AACT,cAAI,CAAC,KAAKb,IAAL,CAAUG,KAAf,EAAsB;AACpB;AACD;;AAED,eAAKJ,SAAL,GAAiB,IAAjB;AACA,eAAKK,YAAL,GAAoB,IAApB;AAEA,cAAM7C,QAAQ,GAAa;AACzBe,iBAAK,EAAE,KAAK0B,IAAL,CAAUK,KAAV,CAAgB/B,KADE;AAEzB4B,oBAAQ,EAAE,KAAKF,IAAL,CAAUK,KAAV,CAAgBH,QAFD;AAGzBI,6BAAiB,EAAE;AAHM,WAA3B;AAMA,eAAK/E,WAAL,CAAiBuF,MAAjB,CAAwBvD,QAAxB,EAAkCiD,SAAlC,CACE,YAAM;AACJ,kBAAI,CAACT,SAAL,GAAiB,KAAjB;;AACA,kBAAI,CAAC3D,MAAL,CAAYK,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD,WAJH,EAKE,UAACoD,KAAD,EAAkB;AAChBjB,mBAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBgB,KAAtB;AACA,kBAAI,CAACE,SAAL,GAAiB,KAAjB;AAEA,kBAAI,CAACK,YAAL,GAAoBP,KAAK,CAAC5E,OAA1B;AACA8D,kBAAM,CAACC,UAAP,CAAkB,YAAM;AACtB,oBAAI,CAACoB,YAAL,GAAoB,IAApB;AACD,aAFD,EAEG,IAFH;AAID,WAfH;AAiBD;;;4BAEU;AACT,iBAAO,KAAKJ,IAAL,CAAUS,GAAV,CAAc,MAAd,CAAP;AACD;;;4BAEW;AACV,iBAAO,KAAKT,IAAL,CAAUS,GAAV,CAAc,OAAd,CAAP;AACD;;;4BAEc;AACb,iBAAO,KAAKT,IAAL,CAAUS,GAAV,CAAc,UAAd,CAAP;AACD;;;;;;;uBA7DUE,e,EAAe,0H,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,yoC;AAAA;AAAA;ACZ5B;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAmC;;AAAO;;AAC5C;;AAEA;;AACE;;AAAyB;AAAA,mBAAY,IAAAI,QAAA,EAAZ;AAAsB,WAAtB;;AACvB;;AACE;;AAAkB;;AAAI;;AACtB;;AAEA;;AAGF;;AAEA;;AACE;;AAAmB;;AAAK;;AACxB;;AAEA;;AAGA;;AAWF;;AAEA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAEA;;AAQF;;AAEA;;AAIA;;AACF;;AACF;;AACF;;AAEA;;AAIF;;AACF;;AACF;;;;AA3DgB;;AAAA;;AAK+B;;AAAA;;AASH;;AAAA;;AAGG;;AAAA;;AAiBA;;AAAA;;AAUV;;AAAA;;AAIZ;;AAAA;;AAK+C;;AAAA;;;;;;;;;sEDnD3DJ,e,EAAe;cAL3B,uDAK2B;eALjB;AACTlF,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGaqF,a;;;;;;;4BAEP/F,O,EAAc;AAChB2D,iBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC5D,OAApC,EADgB,CAEhB;AACD;;;;;;;uBALU+F,a;AAAa,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;;;;sEAAbA,a,EAAa;cADzB;AACyB,Q;;;;;;;;;;;;;;;;;;ACH1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOI;;AACE;;AAA2C;;AAAQ;;AACrD;;;;;;AAFqB;;;;;;AAMrB;;AACE;;AAAyC;;AAAO;;AAClD;;;;;;AAFqB;;;;;;AAGrB;;AACE;;AAAwC;;AAAK;;AAC/C;;;;;;AAFqB;;;;;;;;AAGrB;;AACE;;AAAoB;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAM;;AACjD;;;;;;AAF8C;;;;QDPrCC,e;AAOX,+BACU7E,MADV,EAEUb,WAFV,EAEkC;AAAA;;AADxB,aAAAa,MAAA,GAAAA,MAAA;AACA,aAAAb,WAAA,GAAAA,WAAA;AARV,aAAA2F,WAAA,GAAc,GAAd;AACA,aAAAC,eAAA,GAAkB,KAAlB;AAQK;;;;mCAEG;AAAA;;AACN,eAAKC,cAAL,GAAsB,KAAKhF,MAAL,CAAYiF,MAAZ,CACnB7E,IADmB,CACd,8DAAO,UAAArC,CAAC;AAAA,mBAAIA,CAAC,YAAY,6DAAjB;AAAA,WAAR,CADc,EAEnBqG,SAFmB,CAET,UAACrG,CAAD,EAAsB;AAC/B,kBAAI,CAAC+G,WAAL,GAAmB/G,CAAC,CAACmH,GAAF,CAAMC,UAAN,CAAiB,WAAjB,IAAgC,WAAhC,GAA8CpH,CAAC,CAACmH,GAAnE;AACD,WAJmB,CAAtB;AAMA,eAAKE,OAAL,GAAe,KAAKjG,WAAL,CAAiBgB,IAAjB,CAAsBiE,SAAtB,CACb,UAAAjE,IAAI,EAAI;AACN,kBAAI,CAAC4E,eAAL,GAAuB5E,IAAI,GAAG,IAAH,GAAU,KAArC;AACD,WAHY,CAAf;AAKD;;;oCAEWkF,I,EAAc;AACxB,iBAAO,KAAKP,WAAL,KAAqBO,IAA5B;AACD;;;mCAEU;AACT,eAAKlG,WAAL,CAAiB0D,MAAjB;AACD;;;sCAEa;AACZ,cAAI,KAAKmC,cAAT,EAAyB;AACvB,iBAAKA,cAAL,CAAoBM,WAApB;AACD;;AAED,cAAI,KAAKF,OAAT,EAAkB;AAChB,iBAAKA,OAAL,CAAaE,WAAb;AACD;AACF;;;;;;;uBA1CUT,e,EAAe,uH,EAAA,+H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,ulB;AAAA;AAAA;ACZ5B;;AACE;;AAAmC;;AAAS;;AAE5C;;AACE;;AACE;;AAAmC;;AAAI;;AACzC;;AACA;;AAGF;;AAEA;;AACE;;AAGA;;AAGA;;AAGF;;AACF;;;;AAnByB;;AAAA;;AAG0C;;AAAA;;AAMF;;AAAA;;AAGD;;AAAA;;AAGyB;;AAAA;;;;;;;;;sEDP5EA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTxF,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagG,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,+G;AAAA;AAAA;ACP1B;;AACE;;AACE;;AAEE;;AACE;;AAAsB;;AAAS;;AAC/B;;AACE;;AACF;;AACF;;AAEF;;AACF;;AACF;;;;;;;;sEDNaA,a,EAAa;cALzB,uDAKyB;eALf;AACTlG,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;;QAAaiG,Y;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,I;AACX,oBACSpH,EADT,EAES6D,KAFT,EAGUC,MAHV,EAIUF,gBAJV,EAIgC;AAAA;;AAHvB,aAAA5D,EAAA,GAAAA,EAAA;AACA,aAAA6D,KAAA,GAAAA,KAAA;AACC,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAF,gBAAA,GAAAA,gBAAA;AACL;;;;4BAEO;AACV,cAAMyD,WAAW,GAAG1D,IAAI,CAACM,GAAL,EAApB;;AACA,cAAMqD,UAAU,GAAG,KAAK1D,gBAAL,CAAsBI,OAAtB,EAAnB;;AAEA,cAAMvB,KAAK,GAAG4E,WAAW,GAAGC,UAAd,GAA2B,IAA3B,GAAkC,KAAKxD,MAArD;AACA,iBAAOrB,KAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;QAQa8E,qB;AAKX,qCAAoBC,KAApB,EAA2C;AAAA;;AAAvB,aAAAA,KAAA,GAAAA,KAAA;AAA0B;;;;mCAEtC;AAAA;;AACN,eAAKA,KAAL,CAAWlH,IAAX,CAAgByF,SAAhB,CACE,gBAA+B;AAAA,gBAA5BxF,MAA4B,QAA5BA,MAA4B;AAAA,gBAApBC,OAAoB,QAApBA,OAAoB;AAAA,gBAAXC,IAAW,QAAXA,IAAW;AAC7B,kBAAI,CAACF,MAAL,GAAcA,MAAd;AACA,kBAAI,CAACC,OAAL,GAAeA,OAAf;AACA,kBAAI,CAACC,IAAL,GAAYA,IAAZ;AACD,WALH;AAOD;;;;;;;uBAfU8G,qB,EAAqB,+H;AAAA,K;;;YAArBA,qB;AAAqB,uC;AAAA,c;AAAA,a;AAAA,0F;AAAA;AAAA;ACRlC;;AACE;;AACE;;AAEE;;AACE;;AAAI;;AAAY;;AAChB;;AACF;;AAEF;;AACF;;AACF;;;;AAPyB;;AAAA;;AACb;;AAAA;;AACJ;;AAAA;;;;;;;;;sEDEKA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTvG,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;AERlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACCA;;AACE;;AAAwB;;;;AAA8B;;AACtD;;AACE;;AAAkF;;AAClF;;AACA;;AAAqB;;AAAqB;;AAAM;;AAAU;;AAAI;;;;AAAsC;;AAAK;;AACzG;;AACE;;AAAqB;;AAAU;;AAC/B;;AAC6F;;AAAwC;;AACvI;;AACF;;AACA;;AACE;;AAAkE;AAAA;;AAAA;;AAAA;AAAA;;AAChE;;AACF;;AACA;;AAA4D;AAAA;;AAAA;;AAAA;AAAA;;AAC1D;;AACF;;AACF;;AACF;;;;;;AAnB0B;;AAAA;;AAED;;AAAA;;AAA6D;;AAAA;;AAEpB;;AAAA;;AAI1D;;AAAA;;AAA2F;;AAAA;;;;;;AAYnG;;;;QDTauG,sB;AAKX,sCACUC,aADV,EAEUC,eAFV,EAGUH,KAHV,EAIU7F,MAJV,EAIwB;AAAA;;AAHd,aAAA+F,aAAA,GAAAA,aAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAH,KAAA,GAAAA,KAAA;AACA,aAAA7F,MAAA,GAAAA,MAAA;AARV,aAAA2D,SAAA,GAAY,KAAZ;AACA,aAAAsC,OAAA,GAAwB,IAAI,kEAAJ,EAAxB;AASC;;;;mCAEO;AAAA;;AACN,eAAKJ,KAAL,CAAWK,QAAX,CACG9F,IADH,CAEI,iEAAU,UAAC8F,QAAD,EAAwB;AAChC,kBAAI,CAACvC,SAAL,GAAiB,IAAjB;AACA,kBAAI,CAACtF,EAAL,GAAU6H,QAAQ,CAAC7B,GAAT,CAAa,IAAb,CAAV;AACA,mBAAO,MAAI,CAAC2B,eAAL,CAAqBG,UAArB,CAAgC,MAAI,CAAC9H,EAArC,CAAP;AACD,WAJD,CAFJ,EAQG+F,SARH,CASI,UAAC6B,OAAD,EAAa;AACX,kBAAI,CAACA,OAAL,GAAeA,OAAf;AACA,kBAAI,CAACtC,SAAL,GAAiB,KAAjB;AACD,WAZL,EAaI,UAACF,KAAD,EAAW;AACTjB,mBAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBgB,KAAtB;AACA,kBAAI,CAACE,SAAL,GAAiB,KAAjB;AACD,WAjBL;AAmBD;;;mCAEU;AAAA;;AACT,cAAIyC,OAAO,CAAC,eAAD,CAAX,EAA8B;AAC5B,iBAAKzC,SAAL,GAAiB,IAAjB;AACA,iBAAKqC,eAAL,CAAqBK,aAArB,CAAmC,KAAKhI,EAAxC,EAA4C+F,SAA5C,CACE,YAAM;AACJ,qBAAI,CAACT,SAAL,GAAiB,KAAjB;;AACA,qBAAI,CAAC3D,MAAL,CAAYK,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD,aAJH,EAKE,UAACoD,KAAD,EAAW;AACTjB,qBAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBgB,KAAtB;AACA,qBAAI,CAACE,SAAL,GAAiB,KAAjB;AACD,aATH;AAWD;AACF;;;iCAEQ;AACP,eAAK3D,MAAL,CAAYK,QAAZ,CAAqB,CAAC,WAAD,EAAc,KAAKhC,EAAnB,EAAuB,MAAvB,CAArB;AACD;;;;;;;uBAtDUyH,sB,EAAsB,qI,EAAA,kI,EAAA,+H,EAAA,uH;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA,wa;AAAA;AAAA;ACbnC;;AAAI;;AAAc;;AAClB;;AAqBA;;;;AArBgC;;AAAA;;AAqBnB;;AAAA;;;;;;;;;;sEDTAA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTzG,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AAAoD;AAAA;;AAAA;;AAAA;AAAA;;AACpD;;;;;;AADkB;;;;;;AAElB;;;;QDSa+G,0B;AAIX,0CACUN,eADV,EAEUhG,MAFV,EAEwB;AAAA;;AADd,aAAAgG,eAAA,GAAAA,eAAA;AACA,aAAAhG,MAAA,GAAAA,MAAA;AALV,aAAA2D,SAAA,GAAY,KAAZ;AACA,aAAAsC,OAAA,GAAwB,IAAI,yEAAJ,EAAxB;AAKK;;;;mCAEG,CACP;;;sCAEaA,O,EAAuB;AAAA;;AACnC,eAAKtC,SAAL,GAAiB,IAAjB;AACA,eAAKqC,eAAL,CAAqBO,UAArB,CAAgCN,OAAhC,EAAyC7B,SAAzC,CACE,YAAM;AACJ,mBAAI,CAACpE,MAAL,CAAYK,QAAZ,CAAqB,CAAC,WAAD,CAArB;;AACA,mBAAI,CAACsD,SAAL,GAAiB,KAAjB;AACD,WAJH,EAKE,UAACF,KAAD,EAAgB;AACdjB,mBAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBgB,KAAK,CAAC5E,OAA5B;AACA,mBAAI,CAAC8E,SAAL,GAAiB,KAAjB;AACD,WATH;AAWD;;;;;;;uBAzBU2C,0B,EAA0B,kI,EAAA,uH;AAAA,K;;;YAA1BA,0B;AAA0B,8C;AAAA,c;AAAA,a;AAAA,wI;AAAA;AAAA;ACXvC;;AAEA;;;;AAF0F;;AAE7E;;AAAA;;;;;;;;;sEDSAA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTjH,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AAAoD;AAAA;;AAAA;;AAAA;AAAA;;AACpD;;;;;;AADkB;;;;;;AAElB;;;;QDUaiH,0B;AAKX,0CACUR,eADV,EAEUH,KAFV,EAGU7F,MAHV,EAGwB;AAAA;;AAFd,aAAAgG,eAAA,GAAAA,eAAA;AACA,aAAAH,KAAA,GAAAA,KAAA;AACA,aAAA7F,MAAA,GAAAA,MAAA;AAPV,aAAA2D,SAAA,GAAY,KAAZ;AACA,aAAAsC,OAAA,GAAwB,IAAI,kEAAJ,EAAxB;AAOK;;;;mCAEG;AAAA;;AACN,eAAKJ,KAAL,CAAWK,QAAX,CACG9F,IADH,CAEI,iEAAU,UAAC8F,QAAD,EAAwB;AAChC,mBAAI,CAACvC,SAAL,GAAiB,IAAjB;AACA,mBAAI,CAACtF,EAAL,GAAU6H,QAAQ,CAAC7B,GAAT,CAAa,IAAb,CAAV;AACA,mBAAO,OAAI,CAAC2B,eAAL,CAAqBG,UAArB,CAAgC,OAAI,CAAC9H,EAArC,CAAP;AACD,WAJD,CAFJ,EAQG+F,SARH,CASI,UAAC6B,OAAD,EAAa;AACX,mBAAI,CAACA,OAAL,GAAeA,OAAf;AACA,mBAAI,CAACtC,SAAL,GAAiB,KAAjB;AACD,WAZL,EAaI,UAACF,KAAD,EAAW;AACTjB,mBAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBgB,KAAtB;AACA,mBAAI,CAACE,SAAL,GAAiB,KAAjB;AACD,WAjBL;AAmBD;;;sCAEasC,O,EAAuB;AAAA;;AACnC,eAAKtC,SAAL,GAAiB,IAAjB;AACA,eAAKqC,eAAL,CAAqBS,aAArB,CAAmC,KAAKpI,EAAxC,EAA4C4H,OAA5C,EACG7B,SADH,CAEI,YAAM;AACJ,mBAAI,CAACT,SAAL,GAAiB,KAAjB;;AACA,mBAAI,CAAC3D,MAAL,CAAYK,QAAZ,CAAqB,CAAC,WAAD,EAAc,OAAI,CAAChC,EAAnB,CAArB;AACD,WALL,EAMI,UAACoF,KAAD,EAAW;AACTjB,mBAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBgB,KAAtB;AACA,mBAAI,CAACE,SAAL,GAAiB,KAAjB;AACD,WAVL;AAaD;;;;;;;uBAhDU6C,0B,EAA0B,kI,EAAA,+H,EAAA,uH;AAAA,K;;;YAA1BA,0B;AAA0B,8C;AAAA,c;AAAA,a;AAAA,wI;AAAA;AAAA;ACZvC;;AAEA;;;;AAF0F;;AAE7E;;AAAA;;;;;;;;;sEDUAA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTnH,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSU;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AANF;;AACE;;AAGA;;AAGF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAUP;;AACE;;AACF;;;;;;AAOA;;AACE;;AACF;;;;QDvBKmH,oB;AAMX,sCAAc;AAAA;;AAJL,aAAAT,OAAA,GAAwB,IAAI,kEAAJ,EAAxB;AACA,aAAAU,IAAA,GAAe,QAAf;AACC,aAAAC,WAAA,GAAc,IAAI,0DAAJ,EAAd;AAEO;;;;mCAET,CAAY;;;iCAEX;AACP,cAAI,CAAC,KAAKhD,IAAL,CAAUG,KAAf,EAAsB;AACpB;AACD;;AAED,cAAMkC,OAAO,GAAiB,IAAI,kEAAJ,EAA9B;AALO,iCAM2C,KAAKrC,IAAL,CAAUK,KANrD;AAAA,cAMCO,IAND,oBAMCA,IAND;AAAA,cAMOqC,WANP,oBAMOA,WANP;AAAA,cAMoBC,KANpB,oBAMoBA,KANpB;AAAA,cAM2BC,WAN3B,oBAM2BA,WAN3B;AAOPd,iBAAO,CAACzB,IAAR,GAAeA,IAAf;AACAyB,iBAAO,CAACY,WAAR,GAAsBA,WAAtB;AACAZ,iBAAO,CAACa,KAAR,GAAgB1D,QAAQ,CAAC0D,KAAD,CAAxB;AACAb,iBAAO,CAACc,WAAR,GAAsBA,WAAW,IAAI,KAArC;AAEA,eAAKH,WAAL,CAAiBI,IAAjB,CAAsBf,OAAtB;AACD;;;;;;;uBAvBUS,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACVjC;;AAAI;;AAAkB;;AACtB;;AACE;;AACE;;AAA4B;AAAA,mBAAY,IAAAO,MAAA,EAAZ;AAAoB,WAApB;;AAC1B;;AACE;;AAAkB;;AAAI;;AACtB;;AAEA;;AAQF;;AAEA;;AACE;;AAAyB;;AAAW;;AACpC;;AAEA;;AAGF;;AAEA;;AACE;;AAAmB;;AAAK;;AACxB;;AAEA;;AAGF;;AAEA;;AACE;;AAEA;;AAAkD;;AAAU;;AAC9D;;AAEA;;AACE;;AAAsF;;AAAI;;AAC5F;;AACF;;AACF;;AACF;;;;;;;;;;;;AA/CI;;AAAA;;AAM2F;;AAAA;;AAEtD;;AAAA;;AAa/B;;AAAA;;AAC+B;;AAAA;;AAQ/B;;AAAA;;AAC+B;;AAAA;;AAO/B;;AAAA;;AAKoB;;AAAA;;;;;;;;;sEDjCjBP,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTrH,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;gBAC9B,uD;iBAAU,a;;;gBACV;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACKE;;AAEE;;AACF;;;;;;AAHkD;;AAEhD;;AAAA;;;;;;AAHJ;;AACE;;AAIF;;;;;;AAHI;;AAAA;;;;;;AAKJ;;;;QDEa2H,oB;AAMX,oCACUlB,eADV,EAEUhG,MAFV,EAEwB;AAAA;;AADd,aAAAgG,eAAA,GAAAA,eAAA;AACA,aAAAhG,MAAA,GAAAA,MAAA;AAPV,aAAA2D,SAAA,GAAY,KAAZ;AAQK;;;;mCAEG;AAAA;;AACN,eAAKwD,kBAAL,GAA0B,KAAKnB,eAAL,CAAqBoB,eAArB,CAAqChD,SAArC,CACxB,UAAAiD,QAAQ;AAAA,mBAAI,OAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,WADgB,CAA1B;AAIA,eAAK1D,SAAL,GAAiB,IAAjB;AACA,eAAKqC,eAAL,CAAqBsB,WAArB,GAAmClD,SAAnC,CACE,UAACiD,QAAD,EAAc;AACZ,mBAAI,CAACA,QAAL,GAAgBA,QAAhB;AACA,mBAAI,CAAC1D,SAAL,GAAiB,KAAjB;AACD,WAJH,EAKE,UAACF,KAAD,EAAgB;AACdjB,mBAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBgB,KAAK,CAAC5E,OAA5B;AACA,mBAAI,CAAC8E,SAAL,GAAiB,KAAjB;AACD,WATH;AAWD;;;gCAEO;AACN,eAAK3D,MAAL,CAAYK,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;;;sCAEa;AACZ,cAAI,KAAK8G,kBAAT,EAA6B;AAC3B,iBAAKA,kBAAL,CAAwB7B,WAAxB;AACD;AACF;;;;;;;uBAtCU4B,oB,EAAoB,kI,EAAA,uH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,2T;AAAA;AAAA;ACbjC;;AACE;;AAAkD;AAAA,mBAAS,IAAAK,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAe;;AACrF;;AAEA;;AAOA;;;;AAP6B;;AAAA;;AAOhB;;AAAA;;;;;;;;;sEDEAL,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT7H,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEbjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiI,iB,GACX,6BAAc;AAAA;AAAG,K;;;uBADNA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,0H;AAAA;AAAA;ACP9B;;AACE;;AAEE;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEF;;AAEF;;;;;;;;;sEDNaA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTnI,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASakI,e;AAOX,+BACUvG,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAPV,aAAAwG,MAAA,aAAY,sEAAYC,UAAxB,eAO0B,CAL1B;;AACA,aAAAP,eAAA,GAA2C,IAAI,4CAAJ,EAA3C;AACQ,aAAAC,QAAA,GAA2B,EAA3B;AAIH;;;;sCAEM;AAAA;;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,iBAAO,KAAKnG,IAAL,CAAUmD,GAAV,WAAiC,KAAKqD,MAAtC,YACJtH,IADI,CAEH,2DAAI,UAACwH,YAAD,EAAuB;AACzB,gBAAI,CAACA,YAAL,EAAmB;AACjB,qBAAO,EAAP;AACD;;AAED,gBAAMP,QAAQ,GAAmB,EAAjC;AACA,gBAAMnJ,IAAI,GAAG2J,MAAM,CAAC3J,IAAP,CAAY0J,YAAZ,CAAb;AACA1J,gBAAI,CAAC4J,OAAL,CAAa,UAACC,GAAD,EAAS;AACpB,kBAAM9B,OAAO,mCACR2B,YAAY,CAACG,GAAD,CADJ,GACS;AACpB1J,kBAAE,EAAE0J;AADgB,eADT,CAAb;AAIAV,sBAAQ,CAACW,IAAT,CAAc/B,OAAd;AACD,aAND;AAOA,mBAAOoB,QAAP;AACD,WAfD,CAFG,EAkBH,2DAAI,UAACA,QAAD,EAAc;AAChB,mBAAI,CAACA,QAAL,sBAAoBA,QAApB;AACD,WAFD,CAlBG,CAAP;AAsBD;;;mCAEUhJ,E,EAAU;AACnB,iBAAO,KAAK6C,IAAL,CAAUmD,GAAV,WAA+B,KAAKqD,MAApC,cAA8CrJ,EAA9C,YACJ+B,IADI,CAEH,2DAAI,UAACwH,YAAD,EAAuB;AACzB,gBAAM3B,OAAO,mCACR2B,YADQ,GACI;AACfvJ,gBAAE,EAAEA;AADW,aADJ,CAAb;AAIA,mBAAO4H,OAAP;AACD,WAND,CAFG,CAAP;AAUD;;;mCAEUA,O,EAAqB;AAAA;;AAC9B,iBAAO,KAAK/E,IAAL,CAAUE,IAAV,WAAuB,KAAKsG,MAA5B,YAA2CzB,OAA3C,EACJ7F,IADI,CAEH,2DAAI,UAACwH,YAAD,EAAuB;AACzB,gBAAMK,UAAU,mCACXhC,OADW,GACJ;AACV5H,gBAAE,EAAEuJ,YAAY,CAACpD;AADP,aADI,CAAhB;AAKA,mBAAI,CAAC6C,QAAL,gCAAoB,OAAI,CAACA,QAAzB,IAAmCY,UAAnC,GANyB,CAQzB;;AACA,mBAAI,CAACb,eAAL,CAAqBnH,IAArB,CAA0B,OAAI,CAACoH,QAA/B;AACD,WAVD,CAFG,CAAP;AAcD;;;sCAEahJ,E,EAAY4H,O,EAAqB;AAAA;;AAC7C,iBAAO,KAAK/E,IAAL,CAAUgH,KAAV,WAAmB,KAAKR,MAAxB,cAAkCrJ,EAAlC,YAA6C4H,OAA7C,EACJ7F,IADI,CAEH,2DAAI,UAACwH,YAAD,EAAuB;AACzB,gBAAMO,cAAc,mCACfP,YADe,GACH;AACfvJ,gBAAE,EAAEA;AADW,aADG,CAApB;AAIA,mBAAI,CAACgJ,QAAL,GAAgB,OAAI,CAACA,QAAL,CAAce,GAAd,CACd,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAChK,EAAF,KAASA,EAAT,GAAc8J,cAAd,GAA+BE,CAAnC;AAAA,aADa,CAAhB,CALyB,CASzB;;AACA,mBAAI,CAACjB,eAAL,CAAqBnH,IAArB,CAA0B,OAAI,CAACoH,QAA/B;AACD,WAXD,CAFG,CAAP;AAeD;;;sCAEahJ,E,EAAY;AAAA;;AACxB,iBAAO,KAAK6C,IAAL,qBAAoB,KAAKwG,MAAzB,cAAmCrJ,EAAnC,YAA8C+B,IAA9C,CACL,2DAAI,YAAM;AACR,mBAAI,CAACiH,QAAL,GAAgB,OAAI,CAACA,QAAL,CAAciB,MAAd,CAAqB,UAAAD,CAAC;AAAA,qBAAIA,CAAC,CAAChK,EAAF,KAASA,EAAb;AAAA,aAAtB,CAAhB,CADQ,CAGR;;AACA,mBAAI,CAAC+I,eAAL,CAAqBnH,IAArB,CAA0B,OAAI,CAACoH,QAA/B;AACD,WALD,CADK,CAAP;AAQD;;;;;;;uBAvHUI,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;;;sEAAfA,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;ACT5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOac,gB;AAEX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,gH;AAAA;AAAA;ACP7B;;AACE;;AACE;;AAAsB;;AAAU;;AAClC;;AACF;;;;;;;;sEDGaA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTlJ,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMiJ,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBd,gBAAU,EAAE,kDAFa;AAGzBtG,gBAAU,EAAE,oDAHa;AAIzBC,oBAAc,EAAE;AAJS,KAApB;AAOP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AClBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYmH,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAInG,OAAO,CAACiB,KAAR,CAAckF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { NotificationComponent } from './notification/notification.component';\r\nimport { ProductDetailComponent } from './products/product-detail/product-detail.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\r\n\r\nimport { ProductFormCreateComponent } from './products/product-form-create/product-form-create.component';\r\nimport { ProductFormUpdateComponent } from './products/product-form-update/product-form-update.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\n// http://localhost:4200/  - Home\r\n// http://localhost:4200/products  - Products\r\n// http://localhost:4200/products/new  - ProductForm\r\n// http://localhost:4200/products/2/edit  - ProductForm\r\n// http://localhost:4200/products/2  - ProductDetail\r\n// http://localhost:4200/signup  - Sign up\r\n// http://localhost:4200/login  - Login\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: 'products', component: ProductsComponent, canActivate: [AuthGuard], children: [\r\n      {\r\n        path: '', component: NotificationComponent, data: {\r\n          header: 'Note!',\r\n          message: 'Use \\'Add New Product\\' button to create a product. Select a product to view its details.',\r\n          type: 'info'\r\n        }\r\n      },\r\n      { path: 'new', component: ProductFormCreateComponent },\r\n      { path: ':id/edit', component: ProductFormUpdateComponent },\r\n      { path: ':id', component: ProductDetailComponent }\r\n    ]\r\n  },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignUpComponent },\r\n  {\r\n    path: '**', component: NotificationComponent, data: {\r\n      header: 'Sorry!',\r\n      message: '404 - Page not found.',\r\n      type: 'danger'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes)  // router-outlet, routerLink directives, services\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.autoLogin();\n  }\n}\n","<app-header></app-header>\n\n<div class=\"topMargin\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductDetailComponent } from './products/product-detail/product-detail.component';\nimport { ProductFormComponent } from './products/product-form/product-form.component';\n\nimport { LoggerService } from './common/logger.service';\nimport { ProductsService } from './products/products.service';\nimport { HomeComponent } from './home/home.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { ProductListComponent } from './products/product-list/product-list.component';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\nimport { LoginComponent } from './auth/login/login.component';\n\nimport { ProductFormCreateComponent } from './products/product-form-create/product-form-create.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ProductFormUpdateComponent } from './products/product-form-update/product-form-update.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ProductsComponent,\n    ProductDetailComponent,\n    ProductFormComponent,\n    HomeComponent,\n    NotificationComponent,\n    ProductListComponent,\n    SignUpComponent,\n    LoginComponent,\n    ProductFormCreateComponent,\n    ProductFormUpdateComponent,\n    SpinnerComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, // ngModel (Template drive forms feature)\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [\n    LoggerService,\n    ProductsService,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.authService.user.pipe(\n      take(1),\n      map(user => {\n        if (user) {\n          return true;\n        }\n\n        this.router.navigate(['/login']);\n        return false;\n      })\n    );\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpParams,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, switchMap } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return this.authService.user.pipe(\n      take(1),\n      switchMap(user => {\n        if (!user) {\n          return next.handle(request);\n        }\n\n        const modifiedRequest = request.clone({\n          params: new HttpParams().set('auth', user.token),\n          headers: new HttpHeaders().set('x-auth', 'Bearer auth-token')\n        });\n        return next.handle(modifiedRequest);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { throwError, Observable, Subject, BehaviorSubject } from 'rxjs';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthData } from '../models/auth-data.model';\r\nimport { AuthResponseData } from '../models/auth-response-data.model';\r\nimport { User } from '../models/user.model';\r\n\r\nconst TOKEN_EXPIRATION_TIME_IN_SEC = 600;  // 10 minutes\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  user: BehaviorSubject<User> = new BehaviorSubject(null);\r\n  private autoLogoutTimer: number;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) { }\r\n\r\n  signUp(authData: AuthData) {\r\n    return this.http.post<AuthResponseData>(`${environment.authApiUrl}:signUp?key=${environment.firebaseApiKey}`, authData)\r\n      .pipe(\r\n        catchError(this.handleError),\r\n        tap((authResponseData: AuthResponseData) => {\r\n          this.handleAuthToken(authResponseData);\r\n        })\r\n      );\r\n  }\r\n\r\n  login(authData: AuthData) {\r\n    return this.http.post<AuthResponseData>(`${environment.authApiUrl}:signInWithPassword?key=${environment.firebaseApiKey}`, authData)\r\n      .pipe(\r\n        catchError(this.handleError),\r\n        tap((authResponseData: AuthResponseData) => {\r\n          this.handleAuthToken(authResponseData);\r\n        })\r\n      );\r\n  }\r\n\r\n  autoLogin() {\r\n    const userData: {\r\n      id: string;\r\n      email: string;\r\n      _token: string;\r\n      _tokenExpiryDate: string;\r\n    } = JSON.parse(localStorage.getItem('userData'));\r\n\r\n    if (!userData) {\r\n      return;\r\n    }\r\n\r\n    const tokenExpiryDate = new Date(userData._tokenExpiryDate);\r\n    const user = new User(\r\n      userData.id,\r\n      userData.email,\r\n      userData._token,\r\n      tokenExpiryDate\r\n    );\r\n    if (user.token) {\r\n      this.user.next(user);\r\n\r\n      // start the timer\r\n      const expiryDuration = tokenExpiryDate.getTime() - Date.now();\r\n      this.autoLogout(expiryDuration);\r\n    }\r\n  }\r\n\r\n  private autoLogout(expiryDuration: number) {\r\n    console.log('expiryDuration:', expiryDuration);\r\n    this.autoLogoutTimer = window.setTimeout(\r\n      () => {\r\n        this.logout();\r\n      },\r\n      expiryDuration\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    this.user.next(null);\r\n    localStorage.removeItem('userData');\r\n\r\n    if (this.autoLogoutTimer) {\r\n      window.clearTimeout(this.autoLogoutTimer);\r\n      this.autoLogoutTimer = null;\r\n    }\r\n\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  private handleAuthToken(authResponseData: AuthResponseData) {\r\n    const { localId, email, idToken, expiresIn } = authResponseData;\r\n\r\n    const expiresInMS =\r\n      (expiresIn ? parseInt(expiresIn) : TOKEN_EXPIRATION_TIME_IN_SEC) * 1000;\r\n    const tokenExpiryDate = new Date(Date.now() + expiresInMS);\r\n\r\n    const authenticatedUser = new User(localId, email, idToken, tokenExpiryDate);\r\n    localStorage.setItem('userData', JSON.stringify(authenticatedUser));\r\n\r\n    // emit an event\r\n    this.user.next(authenticatedUser);\r\n\r\n    // start the timer\r\n    this.autoLogout(expiresInMS);\r\n  }\r\n\r\n  // NOTE:\r\n  // This error handling is very specific to Firebase API.\r\n  // You will need to implement a similar response within your server-side REST API.\r\n  private handleError(errorResponse: HttpErrorResponse): Observable<Error> {\r\n    const error = new Error('An unknown error occurred.');\r\n\r\n    if (!errorResponse.error || !errorResponse.error.error) {\r\n      return throwError(error);\r\n    }\r\n\r\n    switch (errorResponse.error.error.message) {\r\n      case 'EMAIL_EXISTS':            // signup error\r\n        error.message = 'The email address is already in use by another account.';\r\n        break;\r\n\r\n      case 'EMAIL_NOT_FOUND':         // signup error\r\n        error.message = 'There is no user record corresponding to this email.';\r\n        break;\r\n\r\n      case 'INVALID_PASSWORD':        // login error\r\n        error.message = 'The password is invalid or the user does not have a password.';\r\n        break;\r\n\r\n      case 'OPERATION_NOT_ALLOWED':   // login error\r\n        error.message = 'Password sign-in is disabled.';\r\n        break;\r\n\r\n      case 'USER_DISABLED':\r\n        error.message = 'The user account has been disabled by an administrator.'\r\n        break;\r\n    }\r\n\r\n    return throwError(error);\r\n  }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../auth.service';\nimport { AuthData } from 'src/app/models/auth-data.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  errorMessage: string;\n  isLoading = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  onLogin() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = null;\n\n    const authData: AuthData = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n      returnSecureToken: true\n    }\n\n    this.authService.login(authData).subscribe(\n      () => {\n        this.isLoading = false;\n        this.router.navigate(['/products']);\n      },\n      (error: Error) => {\n        console.log('Login failed.');\n        console.log('Error:', error);\n        this.isLoading = false;\n\n        this.errorMessage = error.message;\n        window.setTimeout(() => {\n          this.errorMessage = null;\n        }, 4000);\n      }\n    );\n  }\n\n  get Email() {\n    return this.form.get('email');\n  }\n\n  get Password() {\n    return this.form.get('password');\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n\n      <div class=\"card bg-light mx-auto mb-3\" style=\"max-width: 30rem;\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title text-center\">Login</h4>\n        </div>\n\n        <div class=\"card-body\">\n          <form [formGroup]=\"form\" (ngSubmit)=\"onLogin()\">\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input class=\"form-control\" type=\"text\" id=\"email\" name=\"email\" placeholder=\"Enter email\"\n                formControlName=\"email\" />\n              <div class=\"alert alert-warning\" *ngIf=\"Email.touched && Email.invalid\">\n                <div *ngIf=\"Email.hasError('required')\">\n                  Email is required.\n                </div>\n                <div *ngIf=\"Email.hasError('email')\">\n                  Email is not valid.\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input class=\"form-control\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter password\"\n                autocomplete=\"off\" formControlName=\"password\" />\n              <div class=\"alert alert-warning\" *ngIf=\"Password.touched && Password.invalid\">\n                <div *ngIf=\"Password.hasError('required')\">\n                  Password is required.\n                </div>\n              </div>\n            </div>\n\n            <div class=\"text-center\" *ngIf=\"!isLoading\">\n              <button type=\"submit\" [disabled]=\"!form.valid\" class=\"btn btn-outline-primary\">Login</button>\n            </div>\n\n            <app-spinner *ngIf=\"isLoading\"></app-spinner>\n\n          </form>\n        </div>\n      </div>\n\n      <div class=\"alert alert-danger mx-auto\" style=\"max-width: 30rem;\" *ngIf=\"!isLoading && errorMessage\">\n        {{ errorMessage }}\n      </div>\n\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../auth.service';\nimport { AuthData } from '../../models/auth-data.model';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  form: FormGroup;\n  errorMessage: string;\n  isLoading = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      name: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n\n  onSignUp() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = null;\n\n    const authData: AuthData = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n      returnSecureToken: true\n    }\n\n    this.authService.signUp(authData).subscribe(\n      () => {\n        this.isLoading = false;\n        this.router.navigate(['/products']);\n      },\n      (error: Error) => {\n        console.log('Sign up failed.');\n        console.log('Error:', error);\n        this.isLoading = false;\n\n        this.errorMessage = error.message;\n        window.setTimeout(() => {\n          this.errorMessage = null;\n        }, 4000);\n\n      }\n    );\n  }\n\n  get Name() {\n    return this.form.get('name');\n  }\n\n  get Email() {\n    return this.form.get('email');\n  }\n\n  get Password() {\n    return this.form.get('password');\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n\n      <div class=\"card bg-light mx-auto mb-3\" style=\"max-width: 30rem;\">\n        <div class=\"card-header\">\n          <h4 class=\"card-title text-center\">Sign up</h4>\n        </div>\n\n        <div class=\"card-body\">\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSignUp()\">\n            <div class=\"form-group\">\n              <label for=\"name\">Name</label>\n              <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" placeholder=\"Enter your name\"\n                formControlName=\"name\" />\n              <div class=\"alert alert-warning\" *ngIf=\"Name.touched && Name.invalid\">\n                Name is required.\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input class=\"form-control\" type=\"text\" id=\"email\" name=\"email\" placeholder=\"Enter email\"\n                formControlName=\"email\" />\n              <div class=\"alert alert-info\" *ngIf=\"Email.pending\">\n                Please wait. Checking for duplicate email...\n              </div>\n              <div class=\"alert alert-warning\" *ngIf=\"Email.touched && Email.invalid\">\n                <div *ngIf=\"Email.hasError('required')\">\n                  Email is required.\n                </div>\n                <div *ngIf=\"Email.hasError('email')\">\n                  Email is not valid.\n                </div>\n                <div *ngIf=\"Email.hasError('isEmailTaken')\">\n                  This email is already taken by another user.\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"password\">Password</label>\n              <input class=\"form-control\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter password\"\n                autocomplete=\"off\" formControlName=\"password\" />\n              <div class=\"alert alert-warning\" *ngIf=\"Password.touched && Password.invalid\">\n                <div *ngIf=\"Password.hasError('required')\">\n                  Password is required.\n                </div>\n                <div *ngIf=\"Password.hasError('minlength')\">\n                  Password should have at least 6 characters.\n                </div>\n              </div>\n            </div>\n\n            <div class=\"text-center\" *ngIf=\"!isLoading\">\n              <button type=\"submit\" [disabled]=\"!form.valid\" class=\"btn btn-outline-primary\">Sign up</button>\n            </div>\n\n            <app-spinner *ngIf=\"isLoading\"></app-spinner>\n          </form>\n        </div>\n      </div>\n\n      <div class=\"alert alert-danger mx-auto\" style=\"max-width: 30rem;\" *ngIf=\"!isLoading && errorMessage\">\n        {{ errorMessage }}\n      </div>\n\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LoggerService {\r\n\r\n  log(message: any) {\r\n    console.log('LoggerService.log():', message);\r\n    // ajax request to the server\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  selectedUrl = '/';\n  isAuthenticated = false;\n\n  subRouteEvents: Subscription;\n  subUser: Subscription\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.subRouteEvents = this.router.events\n      .pipe(filter(e => e instanceof NavigationEnd))\n      .subscribe((e: NavigationEnd) => {\n        this.selectedUrl = e.url.startsWith('/products') ? '/products' : e.url;\n      });\n\n    this.subUser = this.authService.user.subscribe(\n      user => {\n        this.isAuthenticated = user ? true : false\n      }\n    );\n  }\n\n  applyActive(item: string) {\n    return this.selectedUrl === item;\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    if (this.subRouteEvents) {\n      this.subRouteEvents.unsubscribe();\n    }\n\n    if (this.subUser) {\n      this.subUser.unsubscribe();\n    }\n  }\n\n}\n","<nav class=\"navbar navbar-expand navbar-light fixed-top flex-column flex-sm-row\" style=\"background-color: #dce6ff;\">\n  <span class=\"navbar-brand mb-0 h1\">Store App</span>\n\n  <ul class=\"navbar-nav mr-sm-auto\">\n    <li class=\"nav-item\" [class.active]=\"applyActive('/')\">\n      <a class=\"nav-link\" routerLink=\"/\">Home</a>\n    </li>\n    <li class=\"nav-item\" [class.active]=\"applyActive('/products')\" *ngIf=\"isAuthenticated\">\n      <a class=\"nav-link\" routerLink=\"/products\">Products</a>\n    </li>\n  </ul>\n\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\" [class.active]=\"applyActive('/signup')\" *ngIf=\"!isAuthenticated\">\n      <a class=\"nav-link\" routerLink=\"/signup\">Sign up</a>\n    </li>\n    <li class=\"nav-item\" [class.active]=\"applyActive('/login')\" *ngIf=\"!isAuthenticated\">\n      <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n    </li>\n    <li class=\"nav-item\" style=\"cursor: pointer;\" [class.active]=\"applyActive('Logout')\" *ngIf=\"isAuthenticated\">\n      <a class=\"nav-link\" (click)=\"onLogout()\">Logout</a>\n    </li>\n  </ul>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n\n      <div class=\"jumbotron\">\n        <h1 class=\"display-4\">Store App</h1>\n        <p class=\"lead\">\n          A simple web app using Angular.\n        </p>\n      </div>\n\n    </div>\n  </div>\n</div>","export class ProductModel {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  isAvailable: boolean;\r\n}\r\n","export class User {\r\n  constructor(\r\n    public id: string,\r\n    public email: string,\r\n    private _token: string,\r\n    private _tokenExpiryDate: Date\r\n  ) { }\r\n\r\n  get token() {\r\n    const currentTime = Date.now();\r\n    const expiryTime = this._tokenExpiryDate.getTime();\r\n\r\n    const token = currentTime > expiryTime ? null : this._token;\r\n    return token;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n  header: string;\n  message: string;\n  type: string;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(\n      ({ header, message, type }) => {\n        this.header = header;\n        this.message = message;\n        this.type = type;\n      }\n    );\n  }\n\n}\n\n// (data) => {\n//   this.header = data.header;\n//   this.message = data.message;\n//   this.type = data.type;\n// }\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n\n      <div class=\"alert\" [ngClass]=\"{ 'alert-danger': type === 'danger', 'alert-info': type === 'info'}\">\n        <h4>{{ header }}</h4>\n        {{ message }}\n      </div>\n\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from \"@angular/router\";\nimport { switchMap } from 'rxjs/operators';\n\nimport { ProductModel } from '../../models/product.model';\nimport { LoggerService } from '../../common/logger.service';\nimport { ProductsService } from '../products.service';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  isLoading = false;\n  product: ProductModel = new ProductModel();\n  id: string;\n\n  constructor(\n    private loggerService: LoggerService,\n    private productsService: ProductsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .pipe(\n        switchMap((paramMap: ParamMap) => {\n          this.isLoading = true;\n          this.id = paramMap.get('id');\n          return this.productsService.getProduct(this.id);\n        })\n      )\n      .subscribe(\n        (product) => {\n          this.product = product;\n          this.isLoading = false;\n        },\n        (error) => {\n          console.log('Get product failed.');\n          console.log('Error:', error);\n          this.isLoading = false;\n        }\n      );\n  }\n\n  onDelete() {\n    if (confirm('Are you sure?')) {\n      this.isLoading = true;\n      this.productsService.deleteProduct(this.id).subscribe(\n        () => {\n          this.isLoading = false;\n          this.router.navigate(['/products']);\n        },\n        (error) => {\n          console.log('Delete product failed.');\n          console.log('Error:', error);\n          this.isLoading = false;\n        }\n      );\n    }\n  }\n\n  onEdit() {\n    this.router.navigate(['/products', this.id, 'edit']);\n  }\n}\n","<h4>Product Detail</h4>\n<div class=\"card bg-light mb-2\" *ngIf=\"!isLoading\">\n  <h5 class=\"card-header\">{{ product.name | uppercase }}</h5>\n  <div class=\"card-body\">\n    <p class=\"card-text\" [ngStyle]=\"{color: product.isAvailable ? 'blue' : 'orange'}\">{{ product.description }}\n    </p>\n    <p class=\"card-text\"><strong class=\"mr-2\">Price:</strong> <em>{{ product.price | currency : 'INR' }}</em></p>\n    <p class=\"card-text\">\n      <strong class=\"mr-2\">Available?</strong>\n      <em class=\"badge\"\n        [ngClass]=\"{ 'badge-success': product.isAvailable, 'badge-danger': !product.isAvailable }\">{{ product.isAvailable ? 'Yes' : 'No' }}</em>\n    </p>\n  </div>\n  <div class=\"card-footer text-right\">\n    <button type=\"button\" class=\"btn btn-outline-primary btn-sm mr-2\" (click)=\"onEdit()\">\n      Edit\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" (click)=\"onDelete()\">\n      Delete\n    </button>\n  </div>\n</div>\n<app-spinner *ngIf=\"isLoading\"></app-spinner>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ProductsService } from '../products.service';\nimport { ProductModel } from 'src/app/models/product.model';\n\n@Component({\n  selector: 'app-product-form-create',\n  templateUrl: './product-form-create.component.html',\n  styleUrls: ['./product-form-create.component.css']\n})\nexport class ProductFormCreateComponent implements OnInit {\n  isLoading = false;\n  product: ProductModel = new ProductModel();\n\n  constructor(\n    private productsService: ProductsService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSaveProduct(product: ProductModel) {\n    this.isLoading = true;\n    this.productsService.addProduct(product).subscribe(\n      () => {\n        this.router.navigate(['/products']);\n        this.isLoading = false;\n      },\n      (error: any) => {\n        console.log('Add product failed.');\n        console.log('Error:', error.message);\n        this.isLoading = false;\n      }\n    );\n  }\n\n}\n","<app-product-form [product]=\"product\" mode=\"Create\" (saveProduct)=\"onSaveProduct($event)\" *ngIf=\"!isLoading\">\r\n</app-product-form>\r\n<app-spinner *ngIf=\"isLoading\"></app-spinner>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { ProductsService } from '../products.service';\nimport { ProductModel } from '../../models/product.model';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-product-form-update',\n  templateUrl: './product-form-update.component.html',\n  styleUrls: ['./product-form-update.component.css']\n})\nexport class ProductFormUpdateComponent implements OnInit {\n  isLoading = false;\n  product: ProductModel = new ProductModel();\n  id: string;\n\n  constructor(\n    private productsService: ProductsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap\n      .pipe(\n        switchMap((paramMap: ParamMap) => {\n          this.isLoading = true;\n          this.id = paramMap.get('id');\n          return this.productsService.getProduct(this.id);\n        })\n      )\n      .subscribe(\n        (product) => {\n          this.product = product;\n          this.isLoading = false;\n        },\n        (error) => {\n          console.log('Get product failed.');\n          console.log('Error:', error);\n          this.isLoading = false;\n        }\n      );\n  }\n\n  onSaveProduct(product: ProductModel) {\n    this.isLoading = true;\n    this.productsService.updateProduct(this.id, product)\n      .subscribe(\n        () => {\n          this.isLoading = false;\n          this.router.navigate(['/products', this.id]);\n        },\n        (error) => {\n          console.log('Update product failed.');\n          console.log('Error:', error);\n          this.isLoading = false;\n        }\n      );\n\n  }\n\n}\n","<app-product-form [product]=\"product\" mode=\"Update\" (saveProduct)=\"onSaveProduct($event)\" *ngIf=\"!isLoading\">\r\n</app-product-form>\r\n<app-spinner *ngIf=\"isLoading\"></app-spinner>","import { Component, OnInit, Output, EventEmitter, Input, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { ProductModel } from '../../models/product.model';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  @ViewChild('productForm') form: NgForm;\n  @Input() product: ProductModel = new ProductModel();\n  @Input() mode: string = 'Create';\n  @Output() saveProduct = new EventEmitter<ProductModel>();\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  onSave() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    const product: ProductModel = new ProductModel();\n    const { name, description, price, isAvailable } = this.form.value;\n    product.name = name;\n    product.description = description;\n    product.price = parseInt(price);\n    product.isAvailable = isAvailable || false;\n\n    this.saveProduct.emit(product);\n  }\n\n}\n","<h4>{{ mode }} Product</h4>\n<div class=\"card bg-light\">\n  <div class=\"card-body\">\n    <form #productForm=\"ngForm\" (ngSubmit)=\"onSave()\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" placeholder=\"Enter name\" [ngModel]=\"product.name\"\n          required minlength=\"3\" #name=\"ngModel\" />\n        <div class=\"alert alert-warning\" *ngIf=\"name.touched && name.invalid\">\n          <div *ngIf=\"name.hasError('required')\">\n            Name is required.\n          </div>\n          <div *ngIf=\"name.hasError('minlength')\">\n            Name should contain at least 3 characters.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"description\">Description</label>\n        <textarea class=\"form-control\" rows=\"3\" placeholder=\"Enter description\" id=\"description\" name=\"description\"\n          [ngModel]=\"product.description\" required #description=\"ngModel\"></textarea>\n        <div class=\"alert alert-warning\" *ngIf=\"description.touched && description.invalid\">\n          Description is required.\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"price\">Price</label>\n        <input class=\"form-control\" type=\"text\" id=\"price\" name=\"price\" placeholder=\"Enter price\"\n          [ngModel]=\"product.price\" required #price=\"ngModel\" />\n        <div class=\"alert alert-warning\" *ngIf=\"price.touched && price.invalid\">\n          Price is required.\n        </div>\n      </div>\n\n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" id=\"isAvailable\" name=\"isAvailable\" class=\"form-check-input\" value=\"true\"\n          [ngModel]=\"product.isAvailable\" #isAvailable=\"ngModel\" />\n        <label for=\"isAvailable\" class=\"form-check-label\">Available?</label>\n      </div>\n\n      <div class=\"text-right\">\n        <button type=\"submit\" [disabled]=\"!productForm.valid\" class=\"btn btn-outline-primary\">Save</button>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { ProductModel } from '../../models/product.model';\nimport { ProductsService } from '../products.service';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  products: ProductModel[];\n\n  private subProductsChanged: Subscription;\n\n  constructor(\n    private productsService: ProductsService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.subProductsChanged = this.productsService.productsChanged.subscribe(\n      products => this.products = products\n    );\n\n    this.isLoading = true;\n    this.productsService.getProducts().subscribe(\n      (products) => {\n        this.products = products;\n        this.isLoading = false;\n      },\n      (error: any) => {\n        console.log('Get products failed.');\n        console.log('Error:', error.message);\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onAdd() {\n    this.router.navigate(['/products/new']);\n  }\n\n  ngOnDestroy() {\n    if (this.subProductsChanged) {\n      this.subProductsChanged.unsubscribe();\n    }\n  }\n\n}\n","<p>\n  <button class=\"btn btn-outline-primary btn-block\" (click)=\"onAdd()\">Add New Product</button>\n</p>\n\n<div class=\"list-group mb-2\" *ngIf=\"!isLoading\">\n  <a class=\"list-group-item list-group-item-action\" [routerLink]=\"['/products', product.id]\"\n    *ngFor=\"let product of products\">\n    {{ product.name }}\n  </a>\n</div>\n\n<app-spinner *ngIf=\"isLoading\"></app-spinner>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent {\n  constructor() { }\n}\n","<div class=\"container-fluid\">\r\n  <div class=\"row justify-content-center\">\r\n\r\n    <div class=\"col-md-3\">\r\n      <app-product-list></app-product-list>\r\n    </div>\r\n\r\n    <div class=\"col-md-6 col-xl-5\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { ProductModel } from '../models/product.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class ProductsService {\r\n  apiUrl = `${environment.dataApiUrl}/products`;\r\n\r\n  // expose a custom event\r\n  productsChanged: Subject<ProductModel[]> = new Subject<ProductModel[]>();\r\n  private products: ProductModel[] = [];\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getProducts(): Observable<ProductModel[]> {\r\n    // return this.authService.user.pipe(\r\n    //   switchMap((user: User) => {\r\n    //     const token = user.token;\r\n    //     return this.http.get<ProductModel[]>(`${this.apiUrl}.json?auth=${token}`);\r\n    //   }),\r\n    //   map((responseData: any) => {\r\n    //     if (!responseData) {\r\n    //       return [];\r\n    //     }\r\n\r\n    //     const products: ProductModel[] = [];\r\n    //     const keys = Object.keys(responseData);\r\n    //     keys.forEach((key) => {\r\n    //       const product: ProductModel = {\r\n    //         ...responseData[key],\r\n    //         id: key\r\n    //       };\r\n    //       products.push(product);\r\n    //     })\r\n    //     return products;\r\n    //   }),\r\n    //   tap((products) => {\r\n    //     this.products = [...products];\r\n    //   })\r\n    // );\r\n\r\n    return this.http.get<ProductModel[]>(`${this.apiUrl}.json`)\r\n      .pipe(\r\n        map((responseData: any) => {\r\n          if (!responseData) {\r\n            return [];\r\n          }\r\n\r\n          const products: ProductModel[] = [];\r\n          const keys = Object.keys(responseData);\r\n          keys.forEach((key) => {\r\n            const product: ProductModel = {\r\n              ...responseData[key],\r\n              id: key\r\n            };\r\n            products.push(product);\r\n          })\r\n          return products;\r\n        }),\r\n        tap((products) => {\r\n          this.products = [...products];\r\n        })\r\n      );\r\n  }\r\n\r\n  getProduct(id: string): Observable<ProductModel> {\r\n    return this.http.get<ProductModel>(`${this.apiUrl}/${id}.json`)\r\n      .pipe(\r\n        map((responseData: any) => {\r\n          const product: ProductModel = {\r\n            ...responseData,\r\n            id: id\r\n          }\r\n          return product;\r\n        })\r\n      );\r\n  }\r\n\r\n  addProduct(product: ProductModel): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}.json`, product)\r\n      .pipe(\r\n        tap((responseData: any) => {\r\n          const newProduct: ProductModel = {\r\n            ...product,\r\n            id: responseData.name\r\n          };\r\n\r\n          this.products = [...this.products, newProduct];\r\n\r\n          // emit event\r\n          this.productsChanged.next(this.products);\r\n        })\r\n      );\r\n  }\r\n\r\n  updateProduct(id: string, product: ProductModel): Observable<any> {\r\n    return this.http.patch(`${this.apiUrl}/${id}.json`, product)\r\n      .pipe(\r\n        tap((responseData: any) => {\r\n          const updatedProduct: ProductModel = {\r\n            ...responseData,\r\n            id: id\r\n          };\r\n          this.products = this.products.map(\r\n            p => p.id === id ? updatedProduct : p\r\n          );\r\n\r\n          // emit event\r\n          this.productsChanged.next(this.products);\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteProduct(id: string) {\r\n    return this.http.delete(`${this.apiUrl}/${id}.json`).pipe(\r\n      tap(() => {\r\n        this.products = this.products.filter(p => p.id !== id);\r\n\r\n        // emit event\r\n        this.productsChanged.next(this.products);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex justify-content-center\">\n  <div class=\"spinner-border\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n\n<!-- \n<div class=\"d-flex align-items-center\">\n  <strong>Loading...</strong>\n  <div class=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\n</div> \n-->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  dataApiUrl: 'https://store-app-24ac4.firebaseio.com/store-app',\n  authApiUrl: 'https://identitytoolkit.googleapis.com/v1/accounts',\n  firebaseApiKey: 'AIzaSyCwwgkDw0EH_2RI3_83aOMOSQZFg32lLL0'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}